var GITHUB_ISSUES_LINK="https://api.github.com/repos/sorat0mo/url-short/issues/";var PATH_SEGMENTS_TO_SKIP=0;var ME="sorat0mo";function isNumeric(num){return!isNaN(num)}function isUrl(url){return/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,24}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)+$/.test(url)}var isQuery=window.location.href.substr(-1)=="?";var keyword=window.location.pathname.split("/")[PATH_SEGMENTS_TO_SKIP+1];function renderSafeLink(containerId,url){const container=document.getElementById(containerId);container.textContent="";if(!isUrl(url)){container.textContent=url;return}const a=document.createElement("a");a.href=url;a.textContent=url;a.rel="noopener noreferrer";a.target="_blank";container.appendChild(a)}var xhr=new XMLHttpRequest();xhr.onload=function(){var issue="";var url="";if(isNumeric(keyword)){if(xhr.status==200){var payload=JSON.parse(xhr.response);issue=payload}else{issue=""}}else{var payload=JSON.parse(xhr.response);for(var i=0;i<payload.length;i+=1){if(payload[i].body==keyword){issue=payload[i];break}}}if(issue!=""){if(issue.user&&issue.user.login==ME){if(issue.state!="closed"){url="Issue not closed, not redirecting."}else{url=issue.title}}else{url="Failed authentication (GitHub Issue not created by owner of repository)"}}else{url="Slug or issue not found.";}renderSafeLink("link",url);if(isUrl(url)&&!isQuery){window.location.replace(url)}if(isUrl(url)){var qr=new QRious({element:document.getElementById('qrcode'),value:url,size:200})}};var api_url=GITHUB_ISSUES_LINK;if(isNumeric(keyword)){api_url+=keyword}else{api_url=api_url.slice(0,-1)+"?state=all&per_page=100"}xhr.open("GET",api_url);xhr.send();
